import { useState, useContext, useEffect } from "react";
import { useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue
} from "@/components/ui/select";
import { X, Plus, BarChart4, Landmark, TrendingUp } from 'lucide-react';

// Indian PAN card validation utility functions
// PAN Format: AAAPL1234C
// First 3 characters: Alphabetic series running from AAA to ZZZ
// 4th character: Entity type
// 5th character: First character of surname/last name
// 6-9th character: Sequence number
// 10th character: Alphabetic check digit

// Entity codes for PAN card (4th character)
const PAN_ENTITY_TYPES: Record<string, string> = {
  'P': 'Individual',
  'F': 'Firm (Partnership)',
  'C': 'Company',
  'H': 'HUF (Hindu Undivided Family)',
  'A': 'Association of Persons (AOP)',
  'T': 'Trust',
  'B': 'Body of Individuals (BOI)',
  'L': 'Local Authority',
  'J': 'Artificial Juridical Person',
  'G': 'Government',
};

// Function to validate PAN number
function validatePAN(pan: string): boolean {
  if (!pan) return false;
  
  // Remove spaces and convert to uppercase
  pan = pan.replace(/\s/g, '').toUpperCase();
  
  // PAN should be 10 characters
  if (pan.length !== 10) return false;
  
  // First 5 characters should be alphabets
  if (!/^[A-Z]{5}/.test(pan)) return false;
  
  // Next 4 characters should be numbers
  if (!/^[A-Z]{5}[0-9]{4}/.test(pan)) return false;
  
  // Last character should be an alphabet
  if (!/^[A-Z]{5}[0-9]{4}[A-Z]$/.test(pan)) return false;
  
  return true;
}

// Function to get entity type from PAN
function getPANEntityType(pan: string): string | null {
  if (!validatePAN(pan)) return null;
  
  // Entity type is 4th character
  const entityCode = pan.charAt(3);
  return PAN_ENTITY_TYPES[entityCode] || null;
}

// Function to check if PAN belongs to an individual
function isIndividualPAN(pan: string): boolean {
  if (!validatePAN(pan)) return false;
  
  // 'P' entity code represents an individual
  return pan.charAt(3) === 'P';
}

import { 
  ArrowRight, 
  ArrowLeft, 
  Upload, 
  FileText, 
  CheckCircle, 
  PlusCircle, 
  MinusCircle,
  Home, 
  Briefcase,
  PiggyBank,
  CreditCard,
  Calculator,
  FileCheck
} from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { TaxDataContext } from "@/context/TaxDataProvider";
import ProgressTracker from "@/components/ProgressTracker";
import { apiRequest } from "@/lib/queryClient";
import { formatIndianCurrency } from "@/lib/formatters";

// Define step types
interface Step {
